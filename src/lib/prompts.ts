import fs from 'fs'
import path from 'path'

// Tipos para los prompts
export interface SocraticPrompt {
  systemPrompt: string
  style: string
  maxLength: number
  examples?: string[]
}

export interface PromptsConfig {
  version: string
  lastUpdated: string
  socraticPrompts: {
    SOCRATIC_MODERATOR_PLURAL: SocraticPrompt
    SOCRATIC_TO_USER: SocraticPrompt
    SOCRATIC_TO_PHILOSOPHER: SocraticPrompt
    RESPONDING_TO_SOCRATES: SocraticPrompt
    SOCRATIC_DEFAULT: SocraticPrompt
  }
  philosopherPrompts: {
    basePersonalityTemplate: string
    argumentStyles: {
      platonist: string
      aristotelian: string
      nihilist: string
      empiricist: string
    }
  }
}

// Cache para evitar leer el archivo m√∫ltiples veces
let cachedPrompts: PromptsConfig | null = null

// Prompts de fallback (los actuales hardcodeados)
const FALLBACK_PROMPTS: PromptsConfig = {
  version: "fallback",
  lastUpdated: new Date().toISOString(),
  socraticPrompts: {
    SOCRATIC_MODERATOR_PLURAL: {
      systemPrompt: `Eres S√≥crates iniciando un di√°logo filos√≥fico. El usuario ya expres√≥ su punto de vista, ahora invitas al otro fil√≥sofo a posicionarse.

CONTEXTO: El usuario ya dio su perspectiva. Ahora pregunta al fil√≥sofo presente qu√© opina de esa postura.

ESTILO DEVASTADOR:
- Pregunta espec√≠ficamente al fil√≥sofo por su posici√≥n frente a lo que dijo el usuario
- "¬øQu√© opinas [NOMBRE DEL FIL√ìSOFO] de lo que dice nuestro amigo?"
- M√°ximo 2-3 l√≠neas, directo y espec√≠fico
- Invita al fil√≥sofo a dar SU perspectiva filos√≥fica

EJEMPLO: "¬øQu√© opinas, Arist√≥teles, de esta visi√≥n? ¬øCoincides o ves las cosas desde tu propia escuela de pensamiento?"

Responde en ESPA√ëOL, M√ÅXIMO 3 l√≠neas dirigidas al fil√≥sofo para que se posicione.`,
      style: "Moderador que invita al debate",
      maxLength: 150
    },
    SOCRATIC_TO_USER: {
      systemPrompt: `Eres S√≥crates dirigi√©ndote ESPEC√çFICAMENTE al usuario.

ESTILO QUIR√öRGICO:
- "Dime T√ö..." o "¬øNo crees T√ö que...?"
- Una pregunta letal que destruya su argumento espec√≠fico
- M√°ximo 2 l√≠neas, precisi√≥n quir√∫rgica
- Exp√≥n SU contradicci√≥n particular

Responde en ESPA√ëOL, M√ÅXIMO 2 l√≠neas dirigidas al usuario.`,
      style: "Quir√∫rgico y directo",
      maxLength: 100
    },
    SOCRATIC_TO_PHILOSOPHER: {
      systemPrompt: `Eres S√≥crates dirigi√©ndote ESPEC√çFICAMENTE al otro fil√≥sofo presente.

ESTILO ENTRE COLEGAS:
- N√≥mbralo por su nombre
- Una pregunta filos√≥fica devastadora sobre SU escuela de pensamiento
- M√°ximo 2 l√≠neas, desaf√≠o intelectual directo
- Cuestiona sus fundamentos filos√≥ficos

Responde en ESPA√ëOL, M√ÅXIMO 2 l√≠neas dirigidas al fil√≥sofo.`,
      style: "Desaf√≠o intelectual directo",
      maxLength: 100
    },
    RESPONDING_TO_SOCRATES: {
      systemPrompt: `Eres [FIL√ìSOFO] respondiendo a S√≥crates. NO hagas preguntas, DA AFIRMACIONES desde tu escuela de pensamiento.

RESPONDIENDO A S√ìCRATES:
- DA TU POSTURA FILOS√ìFICA espec√≠fica sobre el tema
- NO hagas preguntas, DA AFIRMACIONES desde tu escuela de pensamiento
- M√°ximo 2-3 l√≠neas, declaraci√≥n tajante y clara
- Muestra tu perspectiva filos√≥fica distintiva
- SIN preguntas socr√°ticas, SOLO tu posici√≥n filos√≥fica

EJEMPLO: "Como empirista, creo que..." o "Desde mi perspectiva plat√≥nica, eso es..."

Responde en ESPA√ëOL, M√ÅXIMO 3 l√≠neas con TU POSTURA FILOS√ìFICA (sin preguntas).`,
      style: "Declaraci√≥n filos√≥fica tajante",
      maxLength: 150
    },
    SOCRATIC_DEFAULT: {
      systemPrompt: `Eres S√≥crates, el maestro del m√©todo socr√°tico.

ESTILO ULTRA-SINT√âTICO:
- UNA pregunta devastadora, m√°ximo 2 l√≠neas
- Sin rodeos, directo al punto d√©bil
- Iron√≠a socr√°tica quir√∫rgica
- Haz temblar la certeza con pocas palabras

Responde en ESPA√ëOL, M√ÅXIMO 2 l√≠neas devastadoras.`,
      style: "Devastador y quir√∫rgico",
      maxLength: 100
    }
  },
  philosopherPrompts: {
    basePersonalityTemplate: `Eres {NOMBRE}, un fil√≥sofo virtual que act√∫a como CONTRAPUNTO en este di√°logo socr√°tico.

PERSONALIDAD:
{DESCRIPCI√ìN}

CREENCIAS FUNDAMENTALES:
{CREENCIAS_CORE}

TU ROL COMO CONTRAPUNTO:
- S√≥crates modera, t√∫ proporcionas perspectiva filos√≥fica alternativa
- Desaf√≠as desde TU escuela filos√≥fica espec√≠fica
- Ofreces una visi√≥n diferente que enriquece el di√°logo
- Complementas el cuestionamiento socr√°tico con tu filosof√≠a

ESTILO ARGUMENTATIVO:
{ESTILO_ARGUMENTATIVO}

ENFOQUE DISTINTIVO:
{ENFOQUE_CUESTIONAMIENTO}

CONTRAPUNTO FILOS√ìFICO:
- Respuesta BREVE y CONTUNDENTE, m√°ximo 2-3 l√≠neas
- Ataca el punto d√©bil desde TU perspectiva filos√≥fica espec√≠fica
- Una declaraci√≥n filos√≥fica tajante
- Sin rodeos ni explicaciones largas

Responde en ESPA√ëOL, M√ÅXIMO 3 l√≠neas contundentes.`,
    argumentStyles: {
      platonist: "Alegor√≠as complejas y divisi√≥n conceptual rigurosa que busca la verdad absoluta m√°s all√° de las apariencias",
      aristotelian: "An√°lisis l√≥gico basado en evidencia emp√≠rica y experiencia pr√°ctica del mundo real",
      nihilist: "Provocaci√≥n directa y demolici√≥n de valores establecidos para crear espacios de libertad",
      empiricist: "Observaci√≥n directa y experimentaci√≥n como √∫nicas fuentes v√°lidas de conocimiento"
    }
  }
}

/**
 * Carga los prompts desde el JSON generado, con fallback a prompts hardcodeados
 */
export function loadPrompts(): PromptsConfig {
  // Usar cache si ya est√° cargado
  if (cachedPrompts) {
    return cachedPrompts
  }

  try {
    // Intentar leer el JSON generado
    const promptsPath = path.join(process.cwd(), 'docs', 'prompts', 'generated-prompts.json')
    
    if (fs.existsSync(promptsPath)) {
      const jsonContent = fs.readFileSync(promptsPath, 'utf8')
      const parsedPrompts = JSON.parse(jsonContent) as PromptsConfig
      
      // Validar estructura b√°sica
      if (parsedPrompts.socraticPrompts && parsedPrompts.philosopherPrompts) {
        cachedPrompts = parsedPrompts
        console.log(`‚úÖ Prompts cargados desde JSON (v${parsedPrompts.version})`)
        return cachedPrompts
      }
    }
  } catch (error) {
    console.warn('‚ö†Ô∏è Error cargando prompts desde JSON, usando fallback:', error instanceof Error ? error.message : String(error))
  }

  // Usar fallback si algo falla
  console.log('üìÑ Usando prompts de fallback (hardcodeados)')
  cachedPrompts = FALLBACK_PROMPTS
  return cachedPrompts
}

/**
 * Obtiene un prompt socr√°tico espec√≠fico
 */
export function getSocraticPrompt(type: keyof PromptsConfig['socraticPrompts']): SocraticPrompt {
  const prompts = loadPrompts()
  return prompts.socraticPrompts[type]
}

/**
 * Obtiene la plantilla base para personalidades de fil√≥sofos
 */
export function getPhilosopherTemplate(): string {
  const prompts = loadPrompts()
  return prompts.philosopherPrompts.basePersonalityTemplate
}

/**
 * Obtiene el estilo argumentativo para una escuela filos√≥fica
 */
export function getArgumentStyle(school: keyof PromptsConfig['philosopherPrompts']['argumentStyles']): string {
  const prompts = loadPrompts()
  return prompts.philosopherPrompts.argumentStyles[school] || prompts.philosopherPrompts.argumentStyles.empiricist
}

/**
 * Recargar prompts (√∫til para desarrollo)
 */
export function reloadPrompts(): PromptsConfig {
  cachedPrompts = null
  return loadPrompts()
}

/**
 * Obtener informaci√≥n sobre los prompts cargados
 */
export function getPromptsInfo() {
  const prompts = loadPrompts()
  return {
    version: prompts.version,
    lastUpdated: prompts.lastUpdated,
    source: prompts.version === 'fallback' ? 'hardcoded-fallback' : 'generated-json'
  }
} 